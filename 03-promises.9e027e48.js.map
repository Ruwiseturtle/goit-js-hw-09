{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAwBpC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAa,C,SAAEL,E,MAAUC,GAE/B,OAAO,IAAIK,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLP,EACFK,EAAQF,GAERG,EAAOH,EAAW,GAEnBJ,EAAM,G,CAjCbL,EAAKc,iBAAiB,UAEtB,SAAwBC,GACtBA,EAAEC,iBACF,MAAMC,EAAQC,OAAOlB,EAAKK,OAE1B,IAAK,IAAIc,EAAI,EAAGA,GAAKnB,EAAKoB,OAAOC,MAAOF,GAAK,EAE3ChB,EAAcgB,EAAGF,GACdK,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBkB,EAAAzB,GAAS0B,OAAOC,QAAQ,uBAAqBrB,QAAiBC,MAAU,IAGzEqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBkB,EAAAzB,GAAS0B,OAAOG,QAAQ,sBAAoBvB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector(\".form\");\n\nform.addEventListener('submit', createPromises);\n\nfunction createPromises(e) {\n  e.preventDefault();\n  const delay = Number(form.delay);\n\n  for (let i = 1; i <= form.amount.value; i += 1) {\n    \n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        \n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n  \n};\n\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promiseObj = { position, delay };\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(promiseObj);\n      } else {\n        reject(promiseObj);\n      }\n    }, delay);\n  }); \n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","promiseObj","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","delay1","Number","i","amount","value","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.9e027e48.js.map"}